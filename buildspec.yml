phases:
  install:
    commands:
      - echo "Installing Python dependencies..."
      - python3 -m venv venv
      - . venv/bin/activate
      - pip install pytest unittest2 pylint flask telebot Pillow loguru matplotlib

  pre_build:
    commands:
      - echo "Checking out code..."
      - git rev-parse --short HEAD > gitCommit.txt
      - GIT_TAG=$(cat gitCommit.txt)
      - export IMAGE_TAG="v1.0.0-${CODEBUILD_BUILD_ID}-${GIT_TAG}"
      - echo "Logging into ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO

  build:
    commands:
      - echo "Running unit tests..."
      - . venv/bin/activate
      - python -m pytest --junitxml results.xml polybot/test
      - echo "Building Docker image..."
      - cd polybot
      - docker build -t $APP_IMAGE_NAME:latest .
      - docker tag $APP_IMAGE_NAME:latest $APP_IMAGE
      - docker push $APP_IMAGE

  post_build:
    commands:
      - echo "Packaging Helm chart..."
      - sed -i 's/^version:.*/version: ${CHART_VERSION}/' my-python-app-chart/Chart.yaml
      - helm package ./my-python-app-chart
      - echo "Deploying with Helm..."
      - helm upgrade --install my-python-app ./my-python-app-chart-${CHART_VERSION}.tgz \
          --set image.tag=app-${CODEBUILD_BUILD_ID} \
          --namespace $NAMESPACE
      - echo "Publishing SNS notification..."
      - aws sns publish --topic-arn arn:aws:sns:$AWS_REGION:$ACCOUNT_ID:ronn4-sns --message "Build completed for CodeBuild project"

artifacts:
  files:
    - results.xml

notifications:
  success:
    - sns: arn:aws:sns:us-east-2:023196572641:ronn4-sns
    - message: "Build succeeded for $CODEBUILD_PROJECT_NAME #$CODEBUILD_BUILD_ID"
    - subject: "Build Success"
  failure:
    - sns: arn:aws:sns:us-east-2:023196572641:ronn4-sns
    - message: "Build failed for $CODEBUILD_PROJECT_NAME #$CODEBUILD_BUILD_ID"
    - subject: "Build Failure"
